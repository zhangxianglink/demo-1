{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","template","document","createElement","innerHTML","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","warp","remove","removeChild","removeSons","result","son","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","x","innerText","textContent","html","style","Object","obj","key","class","add","className","classList","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","e","next","nodeType","previous","previousSibling","each","nodeList","index","call","list"],"mappings":"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","file":"dom.1d0b6d56.js","sourceRoot":"..\\dom\\src","sourcesContent":["window.dom = {\r\n    //  使用template标签包容传入的html文本\r\n    create(string){\r\n        const template = document.createElement('template');\r\n        template.innerHTML = string;\r\n        return template.content.firstChild;\r\n    },\r\n    // node2节点放到node下一个节点之前\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibling);\r\n    },\r\n    // 调用原本API\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    },\r\n    // 为父节点添加子节点\r\n    append(parent,node){\r\n        parent.appendChild(node);\r\n    },\r\n    // 为子节点添加父节点\r\n    warp(node,parent){\r\n        // before这句话是否多余?\r\n        dom.before(node,parent);\r\n        dom.append(parent,node);\r\n    },\r\n\r\n    // 删除部分\r\n    remove(node){\r\n        node.parentNode.removeChild(node);\r\n        return node;\r\n    },\r\n    // 删除当前节点的所有子节点.并返回\r\n    removeSons(node){\r\n        const result = [];\r\n        let son = node.firstChild;\r\n        while(son){\r\n            result.push(son);\r\n            son.parentNode.removeChild(son);\r\n            son = node.firstChild;\r\n        }\r\n        return result;\r\n    },\r\n\r\n    // 如果三个参数添加属性,2个参数返回属性\r\n    attr(node, name, value){\r\n        if( arguments.length === 3){\r\n            node.setAttribute(name, value);\r\n        }else {\r\n            return node.getAttribute(name);\r\n        }\r\n    },\r\n    //文本,一个参数返回节点内容, 两个参数写入节点参数\r\n    text(node, string){\r\n        let x = ('innerText' in node)\r\n        if( arguments.length === 1){\r\n           if(x){\r\n               return node.innerText;\r\n           }else{\r\n               return node.textContent;\r\n           }\r\n        }else if(arguments.length === 2) {\r\n            if(x){\r\n                node.innerText = string;\r\n            }else{\r\n                node.textContent = string;\r\n            }\r\n        }\r\n    },\r\n    html(node,string){\r\n        if(arguments.length == 2){\r\n            node.innerHTML = string;\r\n        }else if(arguments.length == 1){\r\n            return node.innerHTML;\r\n        }\r\n    },\r\n    style(node, name, value){\r\n        if(arguments.length == 3){\r\n            node.style[name] = value;\r\n        }else if(arguments.length == 2){\r\n            return node.style[name];\r\n        }else if(name instanceof Object){\r\n            const obj = name;\r\n            for(let key in obj){\r\n                node.style[key] = obj[key];\r\n            }\r\n        }\r\n    },\r\n    class: {\r\n        add(node, className){\r\n            node.classList.add(className);\r\n        },\r\n        remove(node, className){\r\n            node.classList.remove(className)\r\n        },\r\n        contains(node, className){\r\n            return node.classList.contains(className);\r\n        }\r\n    },\r\n    //关于节点的操作\r\n    on(node, eventName, fn){\r\n        node.addEventListener(eventName,fn);\r\n    },\r\n    off(node, eventName, fn){\r\n        node.removeEventListener(eventName,fn);\r\n    },\r\n    find(selector, scope){\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode;\r\n    },\r\n    children(node){\r\n        return node.children;\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(e => e != node);\r\n    },\r\n    next(node){ \r\n        let x = node.nextSibling;\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling;\r\n        }\r\n        return x;\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling\r\n        while(x && x.nodeType === 3){\r\n          x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){\r\n        for (let index = 0; index < nodeList.length; index++) {\r\n            fn.call(null,nodeList[index]);           \r\n        }\r\n    },\r\n    index(node){\r\n        const list = node.children(node.parentNode);\r\n        let index;\r\n        for (index = 0; index < list.length; index++) {\r\n           if(list[index] === node){\r\n            break;\r\n           }\r\n        }\r\n        return index;\r\n    }\r\n};"]}